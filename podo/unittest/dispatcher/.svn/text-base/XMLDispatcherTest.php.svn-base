<?php
// Call XMLDispatcherTest::main() if this source file is executed directly.
//require_once dirname(__FILE__).'/../../../../config/common.inc.php';

if (!defined("PHPUnit_MAIN_METHOD")) {
    define("PHPUnit_MAIN_METHOD", "XMLDispatcherTest::main");
}

require_once "PHPUnit/Framework/TestCase.php";
require_once "PHPUnit/Framework/TestSuite.php";

require_once dirname(__FILE__).'/../../class/Podo/Dispatcher/XMLParser.php';

/**
 * Test class for XMLDispatcher.
 * Generated by PHPUnit_Util_Skeleton on 2007-03-13 at 18:19:28.
 */
class XMLDispatcherTest extends PHPUnit_Framework_TestCase {
    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main() {
        require_once "PHPUnit/TextUI/TestRunner.php";

        $suite  = new PHPUnit_Framework_TestSuite("XMLDispatcherTest");
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

	private $parser;
    /**
     * Sets up the fixture, for example, open a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp() {
        $filepath = dirname(__FILE__).'/../../config/dispathcer.xml';
    	$this->parser = new Podo_Dispatcher_XMLParser($filepath);
    }

    /**
     * @todo Implement testGetDocument().
     */
    public function testGetDocument() {
    	$data="<aa><bb type='33'>111</bb><bb>222</bb></aa>";
    	$result_rep = array();
    	$result_rep["AA"][0]["BB"][0]["data"] = "111";
    	$result_rep["AA"][0]["BB"][0]["attr"]["TYPE"] = "33";
    	$result_rep["AA"][0]["BB"][1]["data"] = "222";
		$this->parser->parse_str($data);
		$result = $this->parser->getDocument();
		$this->assertEquals($result_rep, $result);
		
		$this->assertEquals("222", $result["AA"][0]["BB"][1]["data"]);
    }

    /**
     * @todo Implement testParse_str().
     * assertTrue, assertFalse는 함수당 1개만 사용가능하다.
     */
    public function testParse_str_True() {
    	$data = "<aa><bb>111</bb></aa>";
    	$this->assertTrue($this->parser->parse_str($data));
    }

    /**
     * @todo Implement testParse_str().
     */
    public function testParse_str_false() {
    	$data = "<aa><bb>111</bb</aa>";
    	$this->assertFalse($this->parser->parse_str($data));
    }
}

// Call XMLDispatcherTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == "XMLDispatcherTest::main") {
    XMLDispatcherTest::main();
}
?>
